plugins {
    id 'java'
    id 'application'
    //id 'org.openjfx.javafxplugin' version '0.0.9' //needed for Java 11 and later
    id 'com.dua3.javafxgradle7plugin' version '0.0.9' //fork of the above plugin which works on gradle 7.0+
    id 'org.beryx.jlink' version '2.23.6' //jlink for modules, runtime for standalone packages
    //id 'org.beryx.runtime' version '1.12.4'
}

repositories {
    mavenCentral()
}
sourceCompatibility = "11"
targetCompatibility = "11"

javafx { //needed for Java 11 and later
    version = "11"
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}
dependencies {//needed for automated test cases
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
}
test {
    useJUnitPlatform()
}
jar {
    manifest {
        attributes(
                'Main-Class': 'com.github.computeronfire.yahtzee.Main'
        )
    }
}
mainClassName = "com.github.computeronfire.yahtzee.Main"
//mainModule = "com.github.computeronfire.yahtzee"
application{
    mainClassName = "com.github.computeronfire.yahtzee.Main"
    mainModule = "com.github.computeronfire.yahtzee"
    applicationName = "Yahztee!"
}
//packaging code below
jlink {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']

// Uncomment and adjust the code below if you want to generate images for multiple platforms.
// (You need to also uncomment the line 'targetPlatformName = ...' in the jpackage block.)
/**
    targetPlatform("lin") {
        jdkHome = jdkDownload("https://github.com/AdoptOpenJDK/openjdk15-binaries/releases/download/jdk-15.0.2%2B7/OpenJDK15U-jdk_x64_linux_hotspot_15.0.2_7.tar.gz")
    }
    targetPlatform("mac") {
        jdkHome = jdkDownload("https://github.com/AdoptOpenJDK/openjdk15-binaries/releases/download/jdk-15.0.2%2B7/OpenJDK15U-jdk_x64_mac_hotspot_15.0.2_7.tar.gz") {
            downloadDir = "$buildDir/myMac"
            archiveName = "my-mac-jdk"
            archiveExtension = "tar.gz"
            pathToHome = "jdk-15.0.2+7/Contents/Home"
            overwrite = true
        }
    }
    targetPlatform("win") {
        jdkHome = jdkDownload("https://github.com/AdoptOpenJDK/openjdk15-binaries/releases/download/jdk-15.0.2%2B7/OpenJDK15U-jdk_x64_windows_hotspot_15.0.2_7.zip")
    }
*/

    launcher {
        noConsole = true
        name = "Yahtzee!"
    }
    jpackage {
        // Uncomment and adjust the following line if your runtime task is configured to generate images for multiple platforms
        // targetPlatformName = "mac"

        jpackageHome = 'C:/Program Files/Java/jdk-15.0.1' //jpackage is included in Java 15 and later, this needs to be configured to point towards JDK15 or later to build an installer
        def currentOs = org.gradle.internal.os.OperatingSystem.current()
        def imgType = currentOs.windows ? 'ico' : currentOs.macOsX ? 'icns' : 'png'
        imageOptions += ['--icon', "src/main/resources/yahtzee.$imgType"]
        installerOptions += ['--resource-dir', "src/main/resources"]
        installerOptions += ['--vendor', 'Group #17']

        if(currentOs.windows) {
            installerOptions += ['--win-per-user-install', '--win-dir-chooser', '--win-menu', '--win-shortcut']
        }
        else if (currentOs.linux) {
            installerOptions += ['--linux-package-name', 'yahtzee','--linux-shortcut']
        }
        else if (currentOs.macOsX) {
            installerOptions += ['--mac-package-name', 'yahtzee']
        }
    }
}